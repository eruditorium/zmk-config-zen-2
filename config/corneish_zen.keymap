#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_6col_layout;

        // zmk,physical-layout = &foostan_corne_5col_layout;
    };
};

/*                     42 KEY MATRIX

  ╭────────────────────────┬────────────────────────╮ 
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ 
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ 
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ 
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ 
              ╰────────────┴────────────╯              */

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29    // Left-hand keys.
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // Right-hand keys.
#define THUMBS 36 37 38 39 40 41 42                               // Thumb keys.

/ {
    behaviors {
        /* Left-hand HRMs. */
        hml: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        /* Right-hand HRMs. */
        hmr: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
         /* Nav cluster */
         mt_home: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&masked_home>, <&kp>;
            flavor = "tap-preferred";                                                    
            tapping-term-ms = <220>;                                                     
            quick-tap-ms = <220>;                                                        
            hold-trigger-key-positions = <0>;
        };
        mt_end: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&masked_end>, <&kp>;
            flavor = "tap-preferred";                                                    
            tapping-term-ms = <220>;                                                     
            quick-tap-ms = <220>;                                                        
            hold-trigger-key-positions = <0>;
        };
        masked_home: masked_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp HOME>;
            mods = <(MOD_LCTL)>;
        };
        masked_end: masked_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp END>, <&kp END>;
            mods = <(MOD_LCTL)>;
        };
    };
};


/* Nav cluster */
#define NAV_LEFT  &mt_home 0   LEFT  // Tap: left  | Long-tap: start of line.
#define NAV_RIGHT &mt_end 0    RIGHT // Tap: right | Long-tap: end   of line.
#define NAV_UP    &mt LC(HOME) UP    // Tap: up    | Long-tap: start of doc.
#define NAV_DOWN  &mt LC(END)  DOWN  // Tap: down  | Long-tap: end   of doc.
#define NAV_BSPC  &mt LC(BSPC) BSPC  // Tap: bspc  | Long-tap: delete word bwd.
#define NAV_DEL   &mt LC(DEL)  DEL   // Tap: del   | Long-tap: delete word fwd.

/ {
keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
    // --------------------------------------------------------------------------------
    // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  |   |
    // | TAB  |  A  |  S  |  D* |  F* |  G  |   |  H  |  J*  |  K* |  L  |  ;  |  '   |
    // | CTRL |  Z* |  X* |  C  |  V  |  B  |   |  N  |  M   |  ,* |  .* |  /  | EQUAL|
    //                    |BKSP |LWR* |ENT* |   | SPC | RSE* |DEL* |

            bindings = <
&kp ESC    &kp Q        &kp W       &kp E       &kp R              &kp T         &kp Y      &kp U               &kp I                &kp O         &kp P            &kp BSPC
&kp TAB    &kp A        &kp S       &kp D       &hml LEFT_SHIFT F  &kp G         &kp H      &hmr RIGHT_SHIFT J  &kp K                &kp L         &kp SEMI         &kp SQT
&kp LCTRL  &hml LCTRL Z &hml LWIN X &hml LALT C &kp V              &kp B         &kp N      &kp M               &hmr RALT COMMA      &hmr RGUI DOT &hmr RCTRL SLASH &kp RSHFT
                                    &kp BSPC    &lt 1 ESC          &kp RETURN    &kp SPACE  &lt 2 TAB           &hmr RIGHT_SHIFT DEL
>;
        };

        lower_layer {
            display-name = "NUMBER";
    // Lower
    //  ,-----------------------------------------------------.                    ,-----------------------------------------------------.
    //  |    ▼   | CAPSLCK|  Home  |   ↑    |   Pg↑  |   {    |                    |    }   |   7    |   8    |   9    |   +    |  Del   |
    //  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
    //  |    ▼   | NUMLCK |   ←    │   ↓    │    →   |   [    |                    |    ]   |   4    |   5    |   6    |   -    |   =    |
    //  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
    //  |    ▼   |        |  End   |  SAVE  |   Pg↓  |   (    |                    |    )   |   1    |   2    |   3    |   *    |   ▼    |
    //  `--------+--------+--------+--------+--------+--------+--------.  .--------+--------+--------+--------+--------+--------+--------'
    //                                      |    ▼   |   ▼    |    ▼   |  |   -    | Adjust |   0    |
    //                                      `--------------------------'  `--------------------------'

            bindings = <
&trans  &kp CAPSLOCK    &kp HOME  &kp UP     &kp PG_UP      &kp LBRC    &kp RBRC  &kp N7  &kp N8  &kp N9  &kp PLUS      &kp LC(BSPC)
&trans  &kp KP_NUMLOCK  &kp LEFT  &kp DOWN   &kp RIGHT      &kp LBKT    &kp RBKT  &kp N4  &kp N5  &kp N6  &kp MINUS     &kp EQUAL
&trans  &kp LS(F10)     &kp END   &kp LC(S)  &kp PAGE_DOWN  &kp LPAR    &kp RPAR  &kp N1  &kp N2  &kp N3  &kp ASTERISK  &trans
                                  &trans     &trans         &trans      &trans    &mo 3   &kp N0
>;
        };

        raise_layer {
            display-name = "SYMBOL";
    // Raise
    //  ,-----------------------------------------------------.                    ,-----------------------------------------------------.
    //  |   ~    |    !   |   @    |   #    |   $    |   %    |                    |    ^   │    Ü   │    &   │    Ö   │    °   │   Del  |
    //  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
    //  |        │    Ä   │   SZ   │   è    │   é    │    ç   │                    │    /   │    £   │    €   │        │    µ   │        |
    //  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
    //  |        │        │        │        │        │        │                    │    |   │        │    ²   │   ³    │        │        │
    //  `--------+--------+--------+--------+--------+--------+--------.  .--------+--------+--------+--------+--------+--------+--------'
    //                                      |        │ ADJUST │    -   │  │    ▼   │    ▼   │    ▼   │
    //                                      `--------------------------'  `--------------------------'

            bindings = <
&kp GRAVE  &kp EXCL     &kp AT      &kp HASH       &kp DLLR       &kp PRCNT                &kp CARET  &kp RA(Y)       &kp AMPS      &kp RA(P)       &kp RA(LS(COMMA))  &caps_word
&trans     &kp RA(Q)    &kp RA(S)   &kp RA(F)      &kp RA(G)      &kp TILDE                &kp BSLH   &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW    &none
&trans     &kp LS(F10)  &kp LS(F6)  &kp LA(LC(L))  &kp LC(LS(V))  &kp RA(RS(SEMICOLON))    &kp PIPE   &kp LC(LS(M))   &kp RA(N2)    &kp RA(N3)      &kp RA(NUMBER_5)   &trans
                                    &trans         &mo 3          &trans                   &trans     &trans          &trans
>;
        };
        adjust_layer {
            display-name= "ADJUST";

    // Adjust
    //  ,-----------------------------------------------------.                    ,-----------------------------------------------------.
    //  | Reset  |        |        |        |        | Print  |                    |  MUTE  |   F7   |   F8   |   F9   |  F12   |   ▼    |
    //  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
    //  | BT CLR |  BT 0  |  BT 1  |  BT 2  |  BT 3  |  BT 4  |                    |  VOL↑  |   F4   |   F5   |   F6   |  F11   |   ▼    |
    //  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
    //  |        |        |  Next  |  Play  |  Prv   |        |                    |  VOL↓  |   F1   |   F2   |   F3   |  F10   |   ▼    |
    //  `--------+--------+--------+--------+--------+--------+--------.  .--------+--------+--------+--------+--------+--------+--------'
    //                                      │    ▼   │    ▼   │    ▼   │  │    ▼   │    ▼   │    ▼   │ 
    //                                      `--------------------------'  `--------------------------'

        
            bindings = <
&trans      &none         &none         &none         &kp PSCRN     &none           &kp C_MUTE    &kp F7  &kp F8  &kp F9  &kp F12  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOL_UP  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans      &none         &none         &none         &none         &none           &kp C_VOL_DN  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                        &trans        &trans        &trans          &trans        &trans  &trans
>;
    };
    layer_4 {
         bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
>;
};
};
};

/ { 
	macros {
		mc_selw: mc_selw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap>,<&kp LA(LEFT)>,<&macro_tap>,<&kp LA(RIGHT)>,<&macro_press>,<&kp LA(LS(LEFT))>,<&macro_pause_for_release>,<&macro_release>,<&kp LA(LS(LEFT))>,<&macro_tap>,<&sl 17>;
        };

        mc_seln: mc_seln {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap>,<&kp HOME>,<&macro_tap>,<&kp HOME>,<&macro_press>,<&kp LS(DOWN)>,<&macro_pause_for_release>,<&macro_release>,<&kp LS(DOWN)>,<&macro_tap>,<&sl 17>;
        };

        mc_delword: mc_delword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap>,<&kp LA(BACKSPACE)>;
        };

        mc_joinwords: mc_joinwords {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap>,<&kp LA(LEFT)>,<&macro_tap>,<&kp BACKSPACE>,<&macro_tap>,<&kp LA(RIGHT)>;
        };
		
        selectline: selectline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECTLINE";
        };

        selectword: selectword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LS(LC(RIGHT))>;
            label = "SELECTWORD";
        };
    };
};

/ { 
	combos {
        compatible = "zmk,combos";

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <16 15>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <19 20>;
        };

        LeftBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <5 4>;
        };

        LeftBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        LeftParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 29>;
        };

        RightBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 7>;
        };

        RightBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        RightParenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <30 31>;
        };

        DoubleQuotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <28 27>;
        };

        Quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <31 32>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <22 23>;
        };





        WordBackspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <10 11>;
        };

        selectline {
            bindings = <&selectline>;
            key-positions = <36 37>;
        };

        selectword {
            bindings = <&selectword>;
            key-positions = <40 41>;
        };





        capsword {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };Esc {
         bindings = <&kp ESCAPE>;
         key-positions = <1 2>;};Tab {
         bindings = <&kp TAB>;
         key-positions = <13 14>;};
    };
};
